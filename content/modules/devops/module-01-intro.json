{
  "id": "devops-intro",
  "title": "Introduction to DevOps",
  "description": "Learn the fundamentals of DevOps culture, practices, and methodologies",
  "order": 1,
  "estimatedMinutes": 30,
  "lessons": [
    {
      "id": "devops-intro-1",
      "title": "What is DevOps?",
      "type": "text",
      "content": "# What is DevOps?\n\nDevOps is a set of practices that combines software development (Dev) and IT operations (Ops). It aims to shorten the systems development life cycle and provide continuous delivery with high software quality.\n\n## Key Principles\n\n1. **Collaboration**: Breaking down silos between development and operations teams\n2. **Automation**: Automating repetitive tasks to increase efficiency\n3. **Continuous Integration/Continuous Delivery (CI/CD)**: Frequent code integration and automated deployment\n4. **Monitoring and Feedback**: Continuous monitoring of applications and infrastructure\n\n## Benefits of DevOps\n\n- Faster time to market\n- Improved collaboration\n- Higher quality software\n- Reduced risk of failures\n- Better customer satisfaction\n\n## The DevOps Lifecycle\n\n1. Plan\n2. Code\n3. Build\n4. Test\n5. Release\n6. Deploy\n7. Operate\n8. Monitor\n\nEach phase feeds back into the previous ones, creating a continuous loop of improvement.",
      "resources": [
        {
          "title": "The Phoenix Project",
          "url": "https://www.amazon.com/Phoenix-Project-DevOps-Helping-Business/dp/0988262592",
          "type": "article"
        },
        {
          "title": "DevOps Handbook",
          "url": "https://www.amazon.com/DevOps-Handbook-World-Class-Reliability-Organizations/dp/1942788002",
          "type": "article"
        }
      ]
    },
    {
      "id": "devops-intro-2",
      "title": "DevOps Culture",
      "type": "text",
      "content": "# DevOps Culture\n\nDevOps is not just about tools and processes; it's fundamentally about culture. A successful DevOps transformation requires a shift in mindset and organizational culture.\n\n## Core Cultural Values\n\n### 1. Collaboration Over Silos\n- Cross-functional teams\n- Shared responsibilities\n- Open communication channels\n\n### 2. Embrace Failure\n- Fail fast, learn faster\n- Blameless post-mortems\n- Continuous improvement\n\n### 3. Automation First\n- Automate repetitive tasks\n- Infrastructure as Code\n- Self-service capabilities\n\n### 4. Measurement and Metrics\n- Data-driven decisions\n- Key performance indicators (KPIs)\n- Continuous feedback loops\n\n## Building a DevOps Culture\n\n1. **Start Small**: Begin with pilot projects\n2. **Lead by Example**: Management support is crucial\n3. **Invest in Learning**: Continuous education and training\n4. **Celebrate Success**: Recognize and reward DevOps practices\n5. **Be Patient**: Cultural change takes time\n\n> \"DevOps is not a goal, but a never-ending process of continual improvement.\" - Jez Humble"
    }
  ]
}